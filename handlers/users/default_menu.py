from aiogram import types
from loader import dp
from keyboards.inline import inline_kb_menu
from utils.db_api.db_asyncpg import *
from aiogram.utils.deep_linking import get_start_link


@dp.message_handler(text=['üóÇÔ∏è –ö–∞—Ç–∞–ª–æ–≥', '–∫–∞—Ç–∞–ª–æ–≥', "–ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥"])
async def show_catalog(message: types.Message):
    await message.answer(f'–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω—É–∂–Ω–æ–≥–æ –≤–∞–º —Ç–æ–≤–∞—Ä–∞.',
                         reply_markup=await inline_kb_menu.categories_markup())


@dp.message_handler(text=['üõçÔ∏è –ö–æ—Ä–∑–∏–Ω–∞', '–∫–æ—Ä–∑–∏–Ω–∞'])
async def show_basket(message: types.Message):
    await send_basket(chat_id=message.chat.id, user_id=message.chat.id)


async def send_basket(chat_id, user_id, bonus=False):
    basket = await basket_list(user_id)
    markup = await inline_kb_menu.basket_markup(basket, bonus)
    sale = (await user_info_by_id(user_id))["bonus"]

    string = f'<b>–ö–æ—Ä–∑–∏–Ω–∞.</b>'
    summ = 0
    count = 1
    if len(basket) > 0:
        for tovar in basket:
            string += f'\n\n{count}. ¬´{tovar["name"]}¬ª ' \
                      f'\n\t\t\t–¶–µ–Ω–∞: {tovar["price"]} √ó {tovar["count"]}  =  {tovar["price"] * tovar["count"]} —Ä—É–±–ª–µ–π'
            summ += tovar["price"] * tovar["count"]
            count += 1
        string += '\n__________________' + '_' * len(str(summ))
    if bonus:
        string += f'\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤: {sale}‚ÇΩ'
        summ -= sale
    string += f'\n–ò—Ç–æ–≥–æ: {summ} —Ä—É–±–ª–µ–π'

    await dp.bot.send_message(chat_id=chat_id, text=string, reply_markup=markup, parse_mode="HTML")


@dp.message_handler(text=['‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', '–∏–∑–±—Ä–∞–Ω–Ω–æ–µ'])
async def show_favourite(message: types.Message):
    await message.answer('–í–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:',
                         reply_markup=await inline_kb_menu.favourite_markup(message.from_user.id))


@dp.message_handler(text=['üì≤Ô∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã', '–∫–æ–Ω—Ç–∞–∫—Ç—ã'])
async def show_contact(message: types.Message):
    await dp.bot.send_location(message.chat.id, latitude=55.78556, longitude=49.12472)

    await message.answer(text=f'SHOPBOT - —É–¥–æ–±–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º –º–∞–≥–∞–∑–∏–Ω\n\nüì≤Ô∏è Telegram: @marssak'
                              f'\n\n‚ÑπÔ∏è–≥. –ö–∞–∑–∞–Ω—å, –º–µ—Ç—Ä–æ –ü–ª–æ—â–∞–¥—å –ì–∞–±–¥—É–ª–ª—ã –¢—É–∫–∞—è',
                         reply_markup=inline_kb_menu.back_to_menu)
    """await message.answer(f'–ò–Ω–æ–≥–¥–∞ –ª—É—á—à–∞—è –ø–æ–º–æ—â—å —á–µ–ª–æ–≤–µ–∫—É - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ –º–µ—à–∞—Ç—å. ‚òùÔ∏è',
                         reply_markup=inline_kb_menu.back_to_menu)"""


@dp.message_handler(text=['üë§ –ü—Ä–æ—Ñ–∏–ª—å', '–ø—Ä–æ—Ñ–∏–ª—å'])
async def show_profile(message: types.Message):
    profile = await user_info_by_id(message.from_user.id)

    link = await get_start_link(message.from_user.id)
    await message.answer(f'‚ÑπÔ∏è –ü—Ä–æ—Ñ–∏–ª—å\n‚îî –í–∞—à–µ –∏–º—è: {profile["fio"]}'
                         f'\n\nü§ù –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:'
                         f'\n‚îú  –ë–æ–Ω—É—Å–Ω—ã–π —Å—á—ë—Ç: <code>{profile["bonus"]}‚ÇΩ</code>'
                         f'\n‚îî  –õ–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö: <code>{profile["referral_count"]}</code>'
                         f'\n\n‚§µÔ∏è–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: '
                         f'\n‚îî <code>{link}</code>',
                         reply_markup=inline_kb_menu.back_to_menu,
                         parse_mode='HTML')

